//---------------------------- "Class Path" or "CLASSPATH" or "PATH" ------------------------------------------------//

INFO: https://docs.oracle.com/javase/tutorial/essential/environment/paths.html

Variabili d'ambiente - Environment Variable (Windows e Linux).

N.B: The PATH environment variable is a series of directories separated by semicolons (;).

Check la variabile d'ambiente PATH (Piattaforma Windows)

	c:> echo %PATH%
	
	C:\Program Files (x86)\Common Files\Oracle\Java\javapath;
	C:\ProgramData\Oracle\Java\javapath;
	C:\Program Files (x86)\Intel\iCLS Client\;
	C:\Program Files\Intel\iCLS Client\;
	C:\WINDOWS\system32;C:\WINDOWS;
	C:\WINDOWS\System32\Wbem;
	C:\WINDOWS\System32\WindowsPowerShell\v1.0\;
	C:\Program Files (x86)\Windows Live\Shared;
	C:\xampp\php;
	C:\Program Files\Microsoft\Web Platform Installer\;
	C:\Program Files\Intel\WiFi\bin\;
	C:\Program Files\Common Files\Intel\WirelessCommon\;
	C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;
	C:\Program Files\Intel\Intel(
	Management Engine Components\IPT;
	C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;
	C:\Program Files (x86)\Intel\Inte
	) Management Engine Components\IPT;
	D:\Lavoro\tool\apache-maven-3.6.0\bin;
	D:\Program Files\Git\cmd;
	C:\Users\Andrea\AppData\Local\atom\bin
	
File .classpath; ???

Adding Jar files to IntellijIdea classpath ???

//--------------------------------------------- log4j-1.2.17 ----------------------------------------------------//

Log4j is a "Logging Framework" of Apache Foundation.

keyWorks: intellij how to integrate log4j in project, Set Up Log4j (Log for Java) in Intellij IDEA,
		  Logging in Java applications using Log4j

Links: 
		- https://logging.apache.org/log4j/2.x/download.html 
		- http://logging.apache.org/log4j/1.2/manual.html
		- http://logging.apache.org/log4j/1.2/faq.html#noconfig
		- https://www.mkyong.com/logging/log4j-hello-world-example/

Log4j properties files:

	Types of Logging ways:
		1- Using "log4j.properties" file;
		2- Using "log4j.xml" file;

Level of Logging:

	1- TRACE
	2- DEBUG
	3- INFO 
	4- WARM
	5- ERROR 
	6- FATAL

	N.B: For standalone Java app, make sure the "log4j.properties" file is under the project/classes directory
		 For Java web applications, make sure the "log4j.properties" file is under the WEB-INF/classes directory


Declare and Intialize a logger Object:

	- private static final Logger log = Logger.getLogger(Log4jTestClass.class);	[Better]
	
	or
	
	- private static final Logger log2 = Logger.getLogger("Log4jTestClass");
	

(After Initialization) Configure "log4j.properties" inside project:

	- PropertyConfigurator.configure("log4j.properties");


Examples of "log4j.properties" file:
	
	Versione 1-
	
		#log4j.properties
		# TRACE < DEBUG < INFO < WARM < ERROR < FATAL
		
		#LOGGER
		log4j.rootLogger=DEBUG, APPENDER_OUT, APPENDER_FILE, toFile

		#APPENDER_OUT
		log4j.appender.APPENDER_OUT=org.apache.log4j.ConsoleAppender
		log4j.appender.APPENDER_OUT.layout=org.apache.log4j.PatternLayout
		#log4j.appender.APPENDER_OUT.layout.ConversionPattern=%5p [%t] (%F:%L) - %m%n
		log4j.appender.APPENDER_OUT.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %p [%C:%L] - %m%n

		#APPENDER_FILE
		log4j.appender.APPENDER_FILE=org.apache.log4j.RollingFileAppender
		log4j.appender.APPENDER_FILE.File=mioLog.log
		log4j.appender.APPENDER_FILE.MaxFileSize=100KB
		log4j.appender.APPENDER_FILE.MaxBackupIndex=1
		log4j.appender.APPENDER_FILE.layout=org.apache.log4j.PatternLayout
		log4j.appender.APPENDER_FILE.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %p [%C:%L] - %m%n

		#CONSOLE - Redirect log messages to console
		log4j.appender.toConsole=org.apache.log4j.ConsoleAppender
		log4j.appender.toConsole.layout=org.apache.log4j.PatternLayout
		log4j.appender.toConsole.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %p [%C:%L] - %m%n
		
		#DAILYROLLINGFILE - Redirect log messages to a log file, support file rolling
		log4j.appender.toFile=org.apache.log4j.DailyRollingFileAppender
		#log4j.appender.toFile.File=./log/logFile.log
		log4j.appender.toFile.File=${catalina.base}/logs/webapps/logFile.log
		log4j.appender.toFile.DatePattern='.'yyyy-MM-dd
		log4j.appender.toFile.layout=org.apache.log4j.PatternLayout
		log4j.appender.toFile.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %p [%C:%L] - %m%n
		
	NOTE: understand the symbols ( Link to API specification: http://logging.apache.org/log4j/1.2/apidocs/org/apache/log4j/PatternLayout.html )
	
		- %d{yyyy-MM-dd HH:mm:ss} = Date and time format
		- %p = the logging priority
		- [%C:%L] = the fully qualified class name of the caller issuing the logging request : the line number from where the logging request was issued
		- %m%n = (%m) the message associated with the logging event and (%n) line separator character or characters (= line break, like '\n')

//--------------------------------------------- ./log4j-1.2.17 --------------------------------------------------//

//--------------------------------------------------- Eclipse ---------------------------------------------------//

Add new Libraries to Project Java:

	- Create (if not existi yet) a "lib" folder (right click on project name: New -> Folder);
	- Copy&Paste libraries into this folder;
	- Select all libraries just copied e right click on these (Build Path -> Add to Build Path);
	- Under "JRE System Library" it will appears a new folder "Referenced Libraries";
	
Maven Integeration for Eclipse (m2e):

	Help -> Install New Software ->	https://download.eclipse.org/technology/m2e/releases

//------------------------------------------------- ./Eclipse ---------------------------------------------------//

//---------------------------- (Jet Brains) Intellij IDEA Community --------------------------------------------//

keyWords: Can I develop Java Enterprise application in IntelliJ Community Edition?, Configuring Module Dependencies and Libraries,
		  intellij how to view classpath in java project, Adding Jar files to IntellijIdea classpath,


PlugIn: 
	- Smart Tomcat plugin


N.B: Intellij Community does not offer Java application server integration. Your alternatives are:

	- buying Intellij licence,
	- switching to Eclipse ;)
	- installing Smart Tomcat plugin https://plugins.jetbrains.com/plugin/9492
	- installing IDEA Jetty Runner plugin https://plugins.jetbrains.com/plugin/7505
	- running the application server from Maven, Gradle, whatever, as outlined in the other answers.
	
How to create a Java WebDynamic project in Intellij (like Eclipse) ????
	
Add new Libraries to Project Java:

	Click on
		File -> Project Structure -> Libraries -> + (New Project Libraries) -> Java
	
//---------------------------------- (Apache) Maven Archetype --------------------------------------------------//


Environment Variable:

	- Name: MAVEN_OPTS 
	- Value: valore: -Xms512m -Xmx1024m -XX:PermSize=64m -XX:MaxPermSize=256m -Djava.awt.headless=true -XX:+CMSClassUnloadingEnabled -XX:+UseConcMarkSweepGC


mvn archetype:generate 
	-DarchetypeGroupId=org.apache.maven.archetypes 
	-DarchetypeArtifactId=maven-archetype-webapp 
	-DarchetypeVersion=1.4
	
mvn archetype:generate -DarchetypeGroupId=org.apache.maven.archetypes -DarchetypeArtifactId=maven-archetype-webapp -DarchetypeVersion=1.4

mvn archetype:generate -DarchetypeGroupId=org.apache.maven.archetypes -DarchetypeArtifactId=maven-archetype-webapp -DgroupId=com.giacomini.andrea -DartifactId=testDioCane -DinteractiveMode=false

project
|-- pom.xml					( file )
`-- src						( folder )
    `-- main				( folder )
        `-- webapp			( folder )
            |-- WEB-INF		( folder )
            |   `-- web.xml	( file )
            `-- index.jsp	( file )
			

http://www.javaserverfaces.org/get-started

mvn archetype:generate -DgroupId=com.giacomini.andrea.jsfMvnWebAppPrj -DartifactId=jsfMvnWebAppPrj -DarchetypeArtifactId=maven-archetype-webapp

This generate in LOCAL_PATH/workspace/projectName/jsfMvnWebAppPrj

	- src 	 	(folder)
	- target 	(folder)
	- pom.xml	(file)
	
Inside this folder prepare the project for to be imported in Eclipse

	mvn eclipse:eclipse -Dwtpversion=2.0
	
	mvn eclipse:eclipse
	
This command generate

	- .project 		(file)
	- .settings 	(folder)
	- .classpath 	(file)


//---------------------------------- wildfly-12.0.0.Final ----------------------------------------------------//

Add User / Update existing "Admin" User

	- %PATH%\wildfly-12.0.0.Final\bin\add-user (Windows "add-user.batch" or Linux "add-user.sh" script)

Administration Console (http://localhost:9990/console/App.html)

	Admin User:

		- user/#123*admin

		
Start/Stop

	Start:
	
		- ./standalone.sh
		
	Stop:
	
		- ./shutdown.sh


Configuration Server

	- path -> %PATH%\wildfly-10.1.0.Final\standalone\configuration
	
	- file -> standalone.xml
	
	    <subsystem xmlns="urn:jboss:domain:datasources:4.0">
			<datasources>
				
				<datasource jndi-name="java:jboss/datasources/ExampleDS" pool-name="ExampleDS" enabled="true" use-java-context="true">
                    <connection-url>jdbc:h2:mem:test;DB_CLOSE_DELAY=-1</connection-url>
                    <driver>h2</driver>
                    <security>
                        <user-name>sa</user-name>
                        <password>sa</password>
                    </security>
                </datasource>
				
                <datasource jndi-name="java:jboss/Oracle_STD_JSF_DSJNDI" pool-name="OracleDS" enabled="true">
                    <connection-url>jdbc:oracle:thin:@192.168.2.163:1521:dbmizar</connection-url>
                    <driver>oracle</driver>
                    <pool>
                        <min-pool-size>1</min-pool-size>
                        <max-pool-size>5</max-pool-size>
                        <prefill>true</prefill>
                    </pool>
                    <security>
                        <user-name>std_jsf</user-name>
                        <password>std_jsf</password>
                    </security>
                </datasource>
                
				<drivers>
                    <driver name="h2" module="com.h2database.h2">
                        <xa-datasource-class>org.h2.jdbcx.JdbcDataSource</xa-datasource-class>
                    </driver>
                    <driver name="oracle" module="com.oracle">
                        <driver-class>oracle.jdbc.driver.OracleDriver</driver-class>
                    </driver>
                </drivers>
				
            </datasources>
        </subsystem>
			
//--------------------------------------------------------------------------------------------------------------//


	- Dropbox
	- Mozilla ThunderBird
	- Oracle Virtual Box
	- MarkdownPad 2
	- Microsoft OneDrive
	- XiaomMiTool versione 0.3.0
	- XiaoMiFlash
	- Mi PC Suite
	- EaseUse Partition Master 
	- WinMerge
	
	RegEdit
	
		- %systemroot%\sysWOW64\regedit
			Computer\HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion
			
		- regedit
			Computer\HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion