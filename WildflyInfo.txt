//---------------------------------- Wildfly-12.0.0.Final ----------------------------------------------------//

#Add User / Update existing "Admin" User

	- %PATH%\wildfly-12.0.0.Final\bin\add-user (Windows "add-user.batch" or Linux "add-user.sh" script)

#Administration Console (http://localhost:9990/console/App.html)

	Admin User:

		- user/#123*admin

		
#Start/Stop Server

	Start:
	
		- ./standalone.sh
		
	Stop:
	
		- ./shutdown.sh


#Configuration Server

	- path -> %PATH%\wildfly-10.1.0.Final\standalone\configuration
	
	- file -> standalone.xml
	
	    <subsystem xmlns="urn:jboss:domain:datasources:4.0">
			<datasources>
				
				<datasource jndi-name="java:jboss/datasources/ExampleDS" pool-name="ExampleDS" enabled="true" use-java-context="true">
                    <connection-url>jdbc:h2:mem:test;DB_CLOSE_DELAY=-1</connection-url>
                    <driver>h2</driver>
                    <security>
                        <user-name>sa</user-name>
                        <password>sa</password>
                    </security>
                </datasource>
				
                <datasource jndi-name="java:jboss/Oracle_STD_JSF_DSJNDI" pool-name="OracleDS" enabled="true">
                    <connection-url>jdbc:oracle:thin:@192.168.2.163:1521:dbmizar</connection-url>
                    <driver>oracle</driver>
                    <pool>
                        <min-pool-size>1</min-pool-size>
                        <max-pool-size>5</max-pool-size>
                        <prefill>true</prefill>
                    </pool>
                    <security>
                        <user-name>std_jsf</user-name>
                        <password>std_jsf</password>
                    </security>
                </datasource>
                
				<drivers>
                    <driver name="h2" module="com.h2database.h2">
                        <xa-datasource-class>org.h2.jdbcx.JdbcDataSource</xa-datasource-class>
                    </driver>
                    <driver name="oracle" module="com.oracle">
                        <driver-class>oracle.jdbc.driver.OracleDriver</driver-class>
                    </driver>
                </drivers>
				
            </datasources>
        </subsystem>


#Interfaces and ports: 

	<interfaces>
	
		<interface name="management">
			<inet-address value="127.0.0.1"/>
		</interface>
		
		<interface name="public">
			<inet-address value="127.0.0.1"/>
		</interface>
		
		
		<interface name="management">
			<inet-address value="${jboss.bind.address.management:127.0.0.1}"/>
		</interface>
		
		<interface name="public">
			<inet-address value="${jboss.bind.address:127.0.0.1}"/>
		</interface>
		
	
		<!-- Equivalent of -b 0.0.0.0 -->  
  
		<interface name="any">  
			<any-address/>  
		</interface>  
		
	</interfaces>


#WildFly as a Service for Linux users

	You can use the scripts which are located under the following folder:
	
		- JBOSS_HOME/docs/contrib/scripts/init.d
		
	You find the following files:
	
		- wildfly-足init足-redhat.sh
		
		- wildfly足-init足-debian.sh
		
		- wildfly.conf
		
	First Step - copy shell script into the folder /etc/init.d 
	
		$ cp wildfly-init-redhat.sh /etc/init.d/wildfly
		
	Now copy as well the wildfly.conf configuration file in the location where the startup script expects it:
	
		$ mkdir -p /etc/default
		
		$ cp wildfly.conf /etc/default
		
	Within the wildfly.conf file adjust the settings in order to fit your installation:

		#Location of Java
		JAVA_HOME=/usr/java/jdk1.8.0_45
		# Location of WildFly
		JBOSS_HOME=/usr/share/wildfly-10.0.0.Final
		# The username who should own the process.
		JBOSS_USER=wildfly
		# The mode WildFly should start, standalone or domain
		JBOSS_MODE=standalone
		# Configuration for standalone mode
		JBOSS_CONFIG=standalone.xml
		
	Next, we will use the  chkconfig command to install WildFly as a service: the first command will add the wildfly shell script to the chkconfig list:
	
		$ chkconfig --add wildfly
		
	The second one, sets the boot levels where the service will be started:
	
		$ $ chkconfig --level 2345 wildfly on
	
	In order to test that the service starts correctly issue from any root/sudoer user:

		$ sudo service wildfly start
		
	And here's the corresponding service stopping:

		$ sudo service wildfly stop
	
	
//--------------------------------------------- ./wildfly-12.0.0.Final ---------------------------------------------------------------//